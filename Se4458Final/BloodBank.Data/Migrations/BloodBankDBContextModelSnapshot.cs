// <auto-generated />
using System;
using BloodBank.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodBank.Data.Migrations
{
    [DbContext(typeof(BloodBankDBContext))]
    partial class BloodBankDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodBank.Data.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hospital_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalID"));

                    b.Property<int>("AMinusBlood")
                        .HasColumnType("int")
                        .HasColumnName("a_minus_blood");

                    b.Property<int>("APlusBlood")
                        .HasColumnType("int")
                        .HasColumnName("a_plus_blood");

                    b.Property<int>("AbMinusBlood")
                        .HasColumnType("int")
                        .HasColumnName("ab_minus_blood");

                    b.Property<int>("AbPlusBlood")
                        .HasColumnType("int")
                        .HasColumnName("ab_plus_blood");

                    b.Property<int>("BMinusBlood")
                        .HasColumnType("int")
                        .HasColumnName("b_minus_blood");

                    b.Property<int>("BPlusBlood")
                        .HasColumnType("int")
                        .HasColumnName("b_plus_blood");

                    b.Property<int>("GeopointID")
                        .HasColumnType("int")
                        .HasColumnName("geopoint_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("ZeroMinusBlood")
                        .HasColumnType("int")
                        .HasColumnName("zero_minus_blood_unit");

                    b.Property<int>("ZeroPlusBlood")
                        .HasColumnType("int")
                        .HasColumnName("zero_plus_blood_unit");

                    b.HasKey("HospitalID");

                    b.ToTable("hospital", (string)null);
                });

            modelBuilder.Entity("BloodBank.Data.Models.RequestForBlood", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<int>("BloodNumber")
                        .HasColumnType("int")
                        .HasColumnName("blood_number");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("blood_type");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<DateTime>("DurationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("duration_time");

                    b.Property<string>("HospitalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hospital_email");

                    b.Property<double>("HospitalLatitude")
                        .HasColumnType("float")
                        .HasColumnName("hospital_latitude");

                    b.Property<double>("HospitalLongitude")
                        .HasColumnType("float")
                        .HasColumnName("hospital_longitude");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("town");

                    b.HasKey("RequestID");

                    b.ToTable("blood_request", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
